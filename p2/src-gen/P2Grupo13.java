// DO NOT EDIT THIS FILE! IT IS AUTOMATICALLY GENERATED FROM FILE "src/P2Grupo13.gold"
import gold.*;
import gold.structures.*;
import gold.structures.automaton.*;
import gold.structures.bag.*;
import gold.structures.collection.*;
import gold.structures.deque.*;
import gold.structures.disjointset.*;
import gold.structures.graph.*;
import gold.structures.heap.*;
import gold.structures.list.*;
import gold.structures.map.*;
import gold.structures.multimap.*;
import gold.structures.point.*;
import gold.structures.queue.*;
import gold.structures.set.*;
import gold.structures.stack.*;
import gold.structures.tree.*;
import gold.structures.tree.binary.*;
import gold.structures.tree.nary.*;
import gold.structures.tuple.*;
import gold.structures.turingMachine.*;
import gold.swing.*;
import gold.swing.icon.*;
import gold.swing.icon.ajaxload.*;
import gold.swing.icon.famfamfam.*;
import gold.swing.icon.gold.*;
import gold.swing.icon.jlfgr.*;
import gold.swing.icon.wikimedia.*;
import gold.swing.icon.windows.*;
import gold.swing.look.*;
import gold.swing.util.*;
import gold.test.*;
import gold.test.automaton.*;
import gold.test.general.*;
import gold.test.graph.*;
import gold.util.*;
import gold.visualization.*;
import gold.visualization.automaton.*;
import gold.visualization.graph.*;
import gold.visualization.quadtree.*;
import gold.visualization.turingMachine.*;
import gold.visualization.util.*;
import java.lang.*;
import org.apfloat.*;
import static gold.util.GReflection.*;
@SuppressWarnings("all")
public final class P2Grupo13 {
  static {
    gold.swing.util.GUtilities.installGoldLookAndFeel();
  }
  public static void main(String[] args) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=14;
      java.util.Scanner sc=null;
      sc=$invokeConstructor(java.util.Scanner.class,new Object[]{$invokeField(System.class,"in",true,null)});
      $line=15;
      Object coder=$fix(P2Grupo13.createCoder());
      $line=16;
      Object deCoder=$fix(P2Grupo13.createDecoder());
      $line=23;
      Utilities.testCodeDecode($cast(gold.structures.automaton.ITransducer.class,coder),$cast(gold.structures.automaton.ITransducer.class,deCoder));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P2Grupo13.class,"main",$line);
    }
  }
  public static ITransducer createCoder() {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=29;
      Object estados1=$fix($opCartsY(new Object[]{$opIntvlY('a','z'),$opIntvlY(0,14),$opIntvlY(0,4)}));
      $line=30;
      Object estados3=$fix($opCartsY(new Object[]{GCollections.asSet('F'),$opIntvlY(0,14)}));
      $line=31;
      Object estados2=$fix(GCollections.asSet('I','R'));
      $line=32;
      Object estados4=$fix($opCartsY(new Object[]{GCollections.asSet(' '),$opIntvlY(0,14),$opIntvlY(0,4)}));
      $line=33;
      Object estados=$fix($opUnionY($opUnionY($opUnionY(estados1,estados2),estados3),estados4));
      $line=34;
      Object input=$fix($opUnionY($opIntvlY('a','z'),GCollections.asSet(' ','.')));
      $line=35;
      Object output=$fix($opUnionY(input,GCollections.asSet('0','1','2','3','4','.')));
      $line=36;
      Object inicial=$fix('I');
      $line=37;
      Object finales=$fix($opCartsY(new Object[]{GCollections.asSet('F'),$opIntvlY(0,14)}));
      $line=38;
      Object coder=$fix($invokeConstructor(GDeterministicTransducer.class,new Object[]{estados,input,output,inicial,finales,new GMethod(P2Grupo13.class,"transicionCoder"),new GMethod(P2Grupo13.class,"printEstadosCoder"),new GMethod(P2Grupo13.class,"printFlechaCoder")}));
      $line=39;
      $result=coder;
      if (true) break $try;
      $line=40;
      $rethrow(new RuntimeException("The function \"createCoder()\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P2Grupo13.class,"createCoder",$line);
    }
    return $cast(ITransducer.class,$result);
  }
  public static Object transicionCoder(Object estado, Object simbolo) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=43;
      if (($opEqualY(estado,'I')&&$opMembrY(simbolo,GCollections.asSet(' ','.')))) {
        $line=44;
        $result='R';
        if (true) break $try;
      }
      else {
        $line=45;
        if ($opEqualY(estado,'R')) {
          $line=46;
          $result='R';
          if (true) break $try;
        }
      }
      $line=49;
      if ($opEqualY(estado,'I')) {
        $line=50;
        if (!$opMembrY(simbolo,GCollections.asSet(' ','.'))) {
          $line=51;
          $result=GCollections.asList(simbolo,$opModulY(1,15),$opModulY(1,5));
          if (true) break $try;
        }
        else {
          $line=52;
          if ($opEqualY(simbolo,'.')) {
            $line=53;
            $result='R';
            if (true) break $try;
          }
        }
      }
      else {
        $line=55;
        if (($opEqualY($getArrayValue(estado,new Object[]{0}),'F')&&$opMembrY(simbolo,GCollections.asSet('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z',' ','.')))) {
          $line=57;
          $result='R';
          if (true) break $try;
        }
        else {
          $line=58;
          if ($opEqualY($getArrayValue(estado,new Object[]{0}),'F')) {
            $line=59;
            $result='F';
            if (true) break $try;
          }
          else {
            $line=60;
            if ($opMembrY($getArrayValue(estado,new Object[]{0}),$opIntvlY('a','z'))) {
              $line=61;
              if (!$opMembrY(simbolo,GCollections.asSet(' ','.'))) {
                $line=62;
                $result=GCollections.asList($getArrayValue(estado,new Object[]{0}),$opModulY($opAdditY($getArrayValue(estado,new Object[]{1}),1),15),$opModulY($getArrayValue(estado,new Object[]{2}),5));
                if (true) break $try;
              }
              else {
                $line=63;
                if ($opEqualY(simbolo,' ')) {
                  $line=64;
                  $result=GCollections.asList(simbolo,$opModulY($getArrayValue(estado,new Object[]{1}),15),$opModulY($getArrayValue(estado,new Object[]{2}),5));
                  if (true) break $try;
                }
                else {
                  $line=65;
                  if ($opEqualY(simbolo,'.')) {
                    $line=66;
                    $result=GCollections.asList('F',$opModulY($opAdditY($getArrayValue(estado,new Object[]{1}),$getArrayValue(estado,new Object[]{2})),5));
                    if (true) break $try;
                  }
                }
              }
            }
            else {
              $line=68;
              if (($opEqualY($getArrayValue(estado,new Object[]{0}),' ')&&$opMembrY(simbolo,GCollections.asSet(' ','.')))) {
                $line=69;
                $result='R';
                if (true) break $try;
              }
              else {
                $line=70;
                if (($opEqualY($getArrayValue(estado,new Object[]{0}),' ')&&$opMembrY(simbolo,$opIntvlY('a','z')))) {
                  $line=71;
                  $result=GCollections.asList(simbolo,$opModulY(1,15),$opModulY($opAdditY($getArrayValue(estado,new Object[]{2}),1),5));
                  if (true) break $try;
                }
              }
            }
          }
        }
      }
      $line=73;
      $rethrow(new RuntimeException("The function \"transicionCoder(estado:Object,simbolo:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P2Grupo13.class,"transicionCoder",$line);
    }
    return $result;
  }
  public static Object printEstadosCoder(Object estado) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=76;
      if ($opMembrY(estado,GCollections.asSet('R','I'))) {
        $line=77;
        $result="";
        if (true) break $try;
      }
      else {
        $line=78;
        if ($opEqualY($getArrayValue(estado,new Object[]{0}),' ')) {
          $line=79;
          $result=Integer.parseInt($cast(java.lang.String.class,$opModulY($opAdditY($getArrayValue(estado,new Object[]{1}),$getArrayValue(estado,new Object[]{2})),5)));
          if (true) break $try;
        }
        else {
          $line=80;
          if ($opEqualY($getArrayValue(estado,new Object[]{0}),'F')) {
            $line=81;
            Object numero=$fix(Integer.parseInt($cast(java.lang.String.class,$opModulY($getArrayValue(estado,new Object[]{1}),5))));
            $line=82;
            $result=$opAdditY($invokeMethod(String.class,"valueOf",true,null,new Object[]{Integer.parseInt($cast(java.lang.String.class,numero))}),'.');
            if (true) break $try;
          }
          else {
            $line=84;
            $result="";
            if (true) break $try;
          }
        }
      }
      $line=86;
      $rethrow(new RuntimeException("The function \"printEstadosCoder(estado:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P2Grupo13.class,"printEstadosCoder",$line);
    }
    return $result;
  }
  public static Object printFlechaCoder(Object estado, Object simbolo) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=88;
      if ($opMembrY(estado,GCollections.asSet('F','R'))) {
        $line=89;
        $result="";
        if (true) break $try;
      }
      $line=91;
      if ($opEqualY(estado,'I')) {
        $line=92;
        $result=simbolo;
        if (true) break $try;
      }
      $line=94;
      if (($opEqualY($getArrayValue(estado,new Object[]{0}),' ')&&$opMembrY(simbolo,$opIntvlY('a','z')))) {
        $line=95;
        $result=simbolo;
        if (true) break $try;
      }
      $line=97;
      if (($opMembrY(simbolo,$opIntvlY('a','z'))&&!$opEqualY($getArrayValue(estado,new Object[]{0}),' '))) {
        $line=98;
        if ($opEqualY(simbolo,$getArrayValue(estado,new Object[]{0}))) {
          $line=99;
          $result=$opModulY($opAdditY($getArrayValue(estado,new Object[]{1}),1),3);
          if (true) break $try;
        }
        else {
          $line=101;
          $result=simbolo;
          if (true) break $try;
        }
      }
      else {
        $line=104;
        if (($opMembrY($getArrayValue(estado,new Object[]{0}),$opIntvlY('a','z'))&&$bool(($opEqualY(simbolo,' ')||$opEqualY(simbolo,'.'))))) {
          $line=105;
          $result=$getArrayValue(estado,new Object[]{0});
          if (true) break $try;
        }
        else {
          $line=107;
          $result="";
          if (true) break $try;
        }
      }
      $line=109;
      $rethrow(new RuntimeException("The function \"printFlechaCoder(estado:Object,simbolo:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P2Grupo13.class,"printFlechaCoder",$line);
    }
    return $result;
  }
  public static ITransducer createDecoder() {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=113;
      Object estados1=$fix($opCartsY(new Object[]{$opIntvlY('a','z'),$opIntvlY(0,14),$opIntvlY(0,4)}));
      $line=114;
      Object estados3=$fix($opCartsY(new Object[]{GCollections.asSet(' '),$opIntvlY(0,4)}));
      $line=115;
      Object estados2=$fix(GCollections.asSet('I','R','F'));
      $line=116;
      Object estados4=$fix($opCartsY(new Object[]{GCollections.asSet('T'),$opIntvlY(0,14),$opIntvlY(0,4)}));
      $line=117;
      Object estados=$fix($opUnionY($opUnionY($opUnionY(estados1,estados2),estados3),estados4));
      $line=118;
      Object input=$fix($opUnionY($opIntvlY('a','z'),GCollections.asSet('0','1','2','3','4','.',' ')));
      $line=119;
      System.out.println($message(new Object[]{input}));
      $line=120;
      Object output=$fix($opUnionY(input,GCollections.asSet('.',' ')));
      $line=121;
      Object inicial=$fix('I');
      $line=122;
      Object finales=$fix(GCollections.asSet('F'));
      $line=123;
      Object decoder=$fix($invokeConstructor(GDeterministicTransducer.class,new Object[]{estados,input,output,inicial,finales,new GMethod(P2Grupo13.class,"transicionDeCoder"),new GMethod(P2Grupo13.class,"printEstadosDeCoder"),new GMethod(P2Grupo13.class,"printFlechaDeCoder")}));
      $line=124;
      $result=decoder;
      if (true) break $try;
      $line=125;
      $rethrow(new RuntimeException("The function \"createDecoder()\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P2Grupo13.class,"createDecoder",$line);
    }
    return $cast(ITransducer.class,$result);
  }
  public static Object transicionDeCoder(Object estado, Object simbolo) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=129;
      if (($opEqualY(estado,'I')&&$opMembrY(simbolo,GCollections.asSet(' ','.')))) {
        $line=130;
        $result='R';
        if (true) break $try;
      }
      else {
        $line=131;
        if ($opEqualY(estado,'R')) {
          $line=132;
          $result='R';
          if (true) break $try;
        }
        else {
          $line=133;
          if (($opEqualY(estado,'F')&&$opMembrY(simbolo,$opUnionY($opUnionY($opIntvlY('a','z'),GCollections.asSet('.',' ')),$opIntvlY('0','5'))))) {
            $line=134;
            $result='R';
            if (true) break $try;
          }
        }
      }
      $line=137;
      if ($opEqualY(estado,'I')) {
        $line=138;
        if (!$opMembrY(simbolo,GCollections.asSet('0','1','2','3','4','.'))) {
          $line=139;
          $result=GCollections.asList(simbolo,$opModulY(1,15),$opModulY(1,5));
          if (true) break $try;
        }
        else {
          $line=141;
          $result='R';
          if (true) break $try;
        }
      }
      else {
        $line=144;
        if ($opMembrY($getArrayValue(estado,new Object[]{0}),$opIntvlY('a','z'))) {
          $line=145;
          if ($opMembrY(simbolo,$opIntvlY('a','z'))) {
            $line=146;
            if (!$opEqualY($getArrayValue(estado,new Object[]{0}),simbolo)) {
              $line=147;
              $result=GCollections.asList($getArrayValue(estado,new Object[]{0}),$opModulY($opAdditY($getArrayValue(estado,new Object[]{1}),1),15),$opModulY($getArrayValue(estado,new Object[]{2}),5));
              if (true) break $try;
            }
            else {
              $line=149;
              $result=GCollections.asList('T',$opModulY($getArrayValue(estado,new Object[]{1}),15),$opModulY($opAdditY($getArrayValue(estado,new Object[]{2}),1),5));
              if (true) break $try;
            }
          }
          else {
            $line=151;
            if ($opMembrY(simbolo,$opIntvlY('0','5'))) {
              $line=152;
              if ($opEqualY(Integer.parseInt($cast(java.lang.String.class,$invokeMethod(String.class,"valueOf",true,null,new Object[]{simbolo}))),$opModulY($opAdditY($getArrayValue(estado,new Object[]{1}),1),3))) {
                $line=153;
                $result=GCollections.asList($getArrayValue(estado,new Object[]{0}),$opModulY($opAdditY($getArrayValue(estado,new Object[]{1}),1),15),$opModulY($getArrayValue(estado,new Object[]{2}),5));
                if (true) break $try;
              }
              else {
                $line=155;
                $result='R';
                if (true) break $try;
              }
            }
            else {
              $line=157;
              if ($opEqualY(simbolo,' ')) {
                $line=158;
                $result='R';
                if (true) break $try;
              }
              else {
                $line=159;
                if ($opEqualY(simbolo,'.')) {
                  $line=160;
                  $result='F';
                  if (true) break $try;
                }
              }
            }
          }
        }
        else {
          $line=162;
          if ($opEqualY($getArrayValue(estado,new Object[]{0}),'T')) {
            $line=163;
            if ($opMembrY(simbolo,$opIntvlY('a','z'))) {
              $line=164;
              $result='R';
              if (true) break $try;
            }
            else {
              $line=165;
              if ($opMembrY(simbolo,GCollections.asSet('.',' '))) {
                $line=166;
                $result='R';
                if (true) break $try;
              }
              else {
                $line=167;
                if ($opEqualY(Integer.parseInt($cast(java.lang.String.class,$invokeMethod(String.class,"valueOf",true,null,new Object[]{simbolo}))),$opModulY($opSubtrY($opAdditY($opModulY($getArrayValue(estado,new Object[]{1}),5),$getArrayValue(estado,new Object[]{2})),1),5))) {
                  $line=168;
                  $result=GCollections.asList(' ',$opModulY($getArrayValue(estado,new Object[]{2}),5));
                  if (true) break $try;
                }
                else {
                  $line=170;
                  $result='R';
                  if (true) break $try;
                }
              }
            }
          }
          else {
            $line=172;
            if ($opEqualY($getArrayValue(estado,new Object[]{0}),' ')) {
              $line=173;
              if ($opMembrY(simbolo,$opIntvlY('a','z'))) {
                $line=174;
                $result=GCollections.asList(simbolo,$opModulY(1,15),$opModulY($getArrayValue(estado,new Object[]{1}),5));
                if (true) break $try;
              }
              else {
                $line=175;
                if ($opMembrY(simbolo,$opIntvlY('0','5'))) {
                  $line=176;
                  if (!$opEqualY(Integer.parseInt($cast(java.lang.String.class,$invokeMethod(String.class,"valueOf",true,null,new Object[]{simbolo}))),$opModulY($getArrayValue(estado,new Object[]{1}),5))) {
                    $line=177;
                    $result='R';
                    if (true) break $try;
                  }
                  else {
                    $line=179;
                    $result='F';
                    if (true) break $try;
                  }
                }
                else {
                  $line=181;
                  if ($opEqualY(simbolo,'.')) {
                    $line=182;
                    $result='F';
                    if (true) break $try;
                  }
                  else {
                    $line=184;
                    $result='R';
                    if (true) break $try;
                  }
                }
              }
            }
          }
        }
      }
      $line=187;
      $rethrow(new RuntimeException("The function \"transicionDeCoder(estado:Object,simbolo:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P2Grupo13.class,"transicionDeCoder",$line);
    }
    return $result;
  }
  public static Object printEstadosDeCoder(Object estado) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=190;
      if ($opEqualY(estado,'F')) {
        $line=191;
        $result='.';
        if (true) break $try;
      }
      else {
        $line=193;
        $result="";
        if (true) break $try;
      }
      $line=195;
      $rethrow(new RuntimeException("The function \"printEstadosDeCoder(estado:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P2Grupo13.class,"printEstadosDeCoder",$line);
    }
    return $result;
  }
  public static Object printFlechaDeCoder(Object estado, Object simbolo) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=198;
      if (($opEqualY(estado,'I')&&$opMembrY(simbolo,$opIntvlY('a','z')))) {
        $line=199;
        $result=simbolo;
        if (true) break $try;
      }
      else {
        $line=200;
        if ($opMembrY(estado,GCollections.asSet('F','R'))) {
          $line=201;
          $result="";
          if (true) break $try;
        }
        else {
          $line=202;
          if (($opEqualY(estado,'I')&&$opMembrY(simbolo,$opUnionY($opIntvlY('0','5'),GCollections.asSet(' ','.'))))) {
            $line=203;
            $result="";
            if (true) break $try;
          }
        }
      }
      $line=206;
      if ($opMembrY($getArrayValue(estado,new Object[]{0}),$opIntvlY('a','z'))) {
        $line=207;
        if ($opMembrY(simbolo,$opIntvlY('a','z'))) {
          $line=208;
          if ($opEqualY(simbolo,$getArrayValue(estado,new Object[]{0}))) {
            $line=209;
            $result="";
            if (true) break $try;
          }
          else {
            $line=211;
            $result=simbolo;
            if (true) break $try;
          }
        }
        else {
          $line=213;
          if ($opMembrY(simbolo,$opIntvlY('0','5'))) {
            $line=214;
            if ($opEqualY(Integer.parseInt($cast(java.lang.String.class,$invokeMethod(String.class,"valueOf",true,null,new Object[]{simbolo}))),$opModulY($opAdditY($getArrayValue(estado,new Object[]{1}),1),3))) {
              $line=215;
              $result=$getArrayValue(estado,new Object[]{0});
              if (true) break $try;
            }
            else {
              $line=217;
              $result="";
              if (true) break $try;
            }
          }
          else {
            $line=219;
            if ($opEqualY(simbolo,' ')) {
              $line=220;
              $result="";
              if (true) break $try;
            }
            else {
              $line=221;
              if ($opEqualY(simbolo,'.')) {
                $line=222;
                $result='.';
                if (true) break $try;
              }
            }
          }
        }
      }
      else {
        $line=224;
        if ($opEqualY($getArrayValue(estado,new Object[]{0}),'T')) {
          $line=225;
          $result="";
          if (true) break $try;
        }
        else {
          $line=227;
          if ($opEqualY($getArrayValue(estado,new Object[]{0}),' ')) {
            $line=228;
            if ($opMembrY(simbolo,$opIntvlY('a','z'))) {
              $line=229;
              $result=$opAdditY(' ',$invokeMethod(String.class,"valueOf",true,null,new Object[]{simbolo}));
              if (true) break $try;
            }
            else {
              $line=231;
              $result="";
              if (true) break $try;
            }
          }
          else {
            $line=234;
            $result="";
            if (true) break $try;
          }
        }
      }
      $line=236;
      $rethrow(new RuntimeException("The function \"printFlechaDeCoder(estado:Object,simbolo:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P2Grupo13.class,"printFlechaDeCoder",$line);
    }
    return $result;
  }
}
